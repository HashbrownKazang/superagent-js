/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "..";
import * as SuperAgent from "../../api";
import * as core from "../../core";

export const OpenAiAssistantParametersToolsItem: core.serialization.Schema<
    serializers.OpenAiAssistantParametersToolsItem.Raw,
    SuperAgent.OpenAiAssistantParametersToolsItem
> = core.serialization
    .union("type", {
        code_interpreter: core.serialization.lazyObject(async () => (await import("..")).ToolAssistantToolsCode),
        retrieval: core.serialization.lazyObject(async () => (await import("..")).ToolAssistantToolsRetrieval),
        function: core.serialization.lazyObject(async () => (await import("..")).ToolAssistantToolsFunction),
    })
    .transform<SuperAgent.OpenAiAssistantParametersToolsItem>({
        transform: (value) => value,
        untransform: (value) => value,
    });

export declare namespace OpenAiAssistantParametersToolsItem {
    type Raw =
        | OpenAiAssistantParametersToolsItem.CodeInterpreter
        | OpenAiAssistantParametersToolsItem.Retrieval
        | OpenAiAssistantParametersToolsItem.Function;

    interface CodeInterpreter extends serializers.ToolAssistantToolsCode.Raw {
        type: "code_interpreter";
    }

    interface Retrieval extends serializers.ToolAssistantToolsRetrieval.Raw {
        type: "retrieval";
    }

    interface Function extends serializers.ToolAssistantToolsFunction.Raw {
        type: "function";
    }
}
