/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "..";
import * as SuperAgent from "../../api";
import * as core from "../../core";

export const AppLibModelsResponseAgent: core.serialization.ObjectSchema<
    serializers.AppLibModelsResponseAgent.Raw,
    SuperAgent.AppLibModelsResponseAgent
> = core.serialization.object({
    id: core.serialization.string(),
    description: core.serialization.string().optional(),
    avatarUrl: core.serialization.string().optional(),
    shareableToken: core.serialization.string().optional(),
    userId: core.serialization.string(),
    documentId: core.serialization.string().optional(),
    toolId: core.serialization.string().optional(),
    tags: core.serialization
        .list(core.serialization.record(core.serialization.string(), core.serialization.unknown()))
        .optional(),
    promptId: core.serialization.string().optional(),
    prompt: core.serialization.record(core.serialization.string(), core.serialization.unknown()).optional(),
    name: core.serialization.string(),
    type: core.serialization.lazy(async () => (await import("..")).AgentType),
    llm: core.serialization.record(core.serialization.string(), core.serialization.unknown()),
    hasMemory: core.serialization.boolean(),
    isPublic: core.serialization.boolean(),
    isListed: core.serialization.boolean(),
    createdAt: core.serialization.date().optional(),
    updatedAt: core.serialization.date().optional(),
});

export declare namespace AppLibModelsResponseAgent {
    interface Raw {
        id: string;
        description?: string | null;
        avatarUrl?: string | null;
        shareableToken?: string | null;
        userId: string;
        documentId?: string | null;
        toolId?: string | null;
        tags?: Record<string, unknown>[] | null;
        promptId?: string | null;
        prompt?: Record<string, unknown> | null;
        name: string;
        type: serializers.AgentType.Raw;
        llm: Record<string, unknown>;
        hasMemory: boolean;
        isPublic: boolean;
        isListed: boolean;
        createdAt?: string | null;
        updatedAt?: string | null;
    }
}
