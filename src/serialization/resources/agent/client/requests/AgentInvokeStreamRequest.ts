/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "../../../..";
import * as SuperAgent from "../../../../../api";
import * as core from "../../../../../core";

export const AgentInvokeStreamRequest: core.serialization.Schema<
    serializers.AgentInvokeStreamRequest.Raw,
    SuperAgent.AgentInvokeStreamRequest
> = core.serialization.object({
    input: core.serialization.string(),
    sessionId: core.serialization.string().optional(),
    outputSchema: core.serialization.string().optional(),
    llmParams: core.serialization.property(
        "llm_params",
        core.serialization.lazyObject(async () => (await import("../../../..")).LlmParams).optional()
    ),
});

export declare namespace AgentInvokeStreamRequest {
    interface Raw {
        input: string;
        sessionId?: string | null;
        outputSchema?: string | null;
        llm_params?: serializers.LlmParams.Raw | null;
    }
}
